name: Publish NuGet Package
on:
  push:
    branches:
      - 6-create-gh-action-to-publish-to-nugetcom
  #push:
  #  tags:
  #    - 'v*'

env:
  dotnetVersion: 7.0.x
  testProjectPath: test/Idam.Libs.EF.Tests
  srcProjectPath: src/Idam.Libs.EF

jobs:
  test:
    name: "Test the package before publish"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK ${{ env.dotnetVersion }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Setup Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Restore dependencies 
        run: dotnet restore ${{ env.testProjectPath }}

      - name: Build library
        run: dotnet build ${{ env.testProjectPath }} --configuration Release --no-restore

      - name: Test
        run: dotnet test ${{ env.testProjectPath }} --no-restore --verbosity normal

  publish:
    name: "Build, Pack, and Publish package to NuGet.org"
    runs-on: ubuntu-latest
    
    needs: test
    if: ${{ needs.test.result == 'success' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK ${{ env.dotnetVersion }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Setup Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Restore dependencies
        run: dotnet restore ${{ env.srcProjectPath }}

      - name: Build library
        run: dotnet build ${{ env.srcProjectPath }} --configuration Release --no-restore

      - name: Pack NuGet package
        run: dotnet pack ${{ env.srcProjectPath }} --configuration Release

      - name: Echo package output
        run: ls ${{ github.workspace }}/${{ env.srcProjectPath }}/bin/Release

      # - name: Publish to NuGet.org
      #   run: dotnet nuget push ${{ env.srcProjectPath }}/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
